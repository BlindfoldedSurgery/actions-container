on:
  workflow_call:
    inputs:
      additional-build-args:
        type: string
        required: false
      context:
        type: string
        required: false
      digest-artifact-name:
        type: string
        required: false
      image-name:
        type: string
        required: false
      platform:
        type: string
        required: true
        default: linux/amd64
      push-image:
        type: boolean
        required: true
      target:
        type: string
        required: false
      version:
        type: string
        required: false
      tag-suffix:
        type: string
        required: false
    outputs:
      digest:
        value: ${{ jobs.build.outputs.digest }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Set up QEMU
        if: inputs.platform != 'linux/amd64'
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ inputs.platform }}
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Log in to GitHub Container Registry
        if: inputs.push-image
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build container image
        id: build
        uses: docker/build-push-action@v5
        with:
          push: ${{ inputs.push-image }}
          build-args: |
            APP_VERSION=${{ inputs.version || github.sha }}
            ${{ inputs.additional-build-args }}
          context: ${{ inputs.context }}
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ inputs.image-name || env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ inputs.version || github.sha }}${{ inputs.tag-suffix }}"
          target: ${{ inputs.target }}
      - name: Write digest to artifact
        if: inputs.push-image && inputs.digest-artifact-name
        run: |
          digest="${{ steps.build.outputs.digest }}"
          mkdir digests
          touch "digests/${digest#sha256:}"
      - name: Upload digest
        if: inputs.push-image && inputs.digest-artifact-name
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.digest-artifact-name }}
          path: digests/*
          if-no-files-found: error
          retention-days: 1
