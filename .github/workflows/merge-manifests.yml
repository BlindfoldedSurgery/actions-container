on:
  workflow_call:
    inputs:
      variant-digests:
        type: string
        required: true
        description: > 
          Newline-separated list of image digests. 
          If this is only one line, it's interpreted as an artifact name to download.
      image-name:
        type: string
        required: false
      tag:
        type: string
        required: false
    outputs:
      image-name:
        value: ${{ jobs.create.outputs.image-name }}
      image-tag:
        value: ${{ jobs.create.outputs.image-tag }}
      image-name-with-tag:
        value: "${{ jobs.create.outputs.image-name }}:${{ jobs.create.outputs.image-tag }}"

jobs:
  create:
    runs-on: ubuntu-24.04
    outputs:
      image-name: ${{ steps.ids.outputs.image-name }}
      image-tag: ${{ steps.ids.outputs.image-tag }}
    steps:
      - name: Download digest artifacts
        uses: actions/download-artifact@v4
        if: "!contains(inputs.variant-digests, '\n')"
        with:
          pattern: ${{ inputs.variant-digests }}-*
          path: /tmp/digests
          merge-multiple: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v5
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Set image name and tag outputs
        id: ids
        run: |
          echo "image-name=ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ inputs.image-name || env.GITHUB_REPOSITORY_NAME_PART_SLUG }}" >> "$GITHUB_OUTPUT"
          echo "image-tag=${{ inputs.tag || github.sha }}" >> "$GITHUB_OUTPUT"
      - name: Create manifest list and push
        run: |
          name="${{ steps.ids.outputs.image-name }}"
          
          digests=""
          if [ -d /tmp/digests ]
          then
            cd /tmp/digests
            digests=$(printf "${name}@sha256:%s " *)
          else
            digests=$(echo -n "${{ inputs.variant-digests }}" | while read -r digest; do printf '%s@%s ' "$name" "$digest"; done)
          fi
          
          tag="${name}:${{ steps.ids.outputs.image-tag }}"
          docker buildx imagetools create -t "$tag" $digests
