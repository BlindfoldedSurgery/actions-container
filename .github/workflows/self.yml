on:
  push:
    branches: [ main ]
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

jobs:
  required-meta:
    if: github.event_name != 'pull_request' || github.event.action != 'closed'
    uses: BlindfoldedSurgery/actions-meta/.github/workflows/required.yml@v1

  check:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    uses: BlindfoldedSurgery/actions-releases/.github/workflows/commitizen-check.yml@v2
    with:
      build-tool: uv
      python-version: "3.13"

  bump:
    if: github.event_name != 'pull_request'
    uses: BlindfoldedSurgery/actions-releases/.github/workflows/commitizen-bump.yml@v2
    with:
      build-tool: uv
      publish-major-tag: true
      python-version: "3.13"
    secrets:
      GH_TOKEN: ${{ secrets.GH_PR_TOKEN }}

  build-docker-minimal:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    uses: ./.github/workflows/build-image-docker.yml
    with:
      push-image: false

  build-docker-all-options:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    strategy:
      matrix:
        context: ["{{defaultContext}}:test-build", "test-build", "./test-build"]
    uses: ./.github/workflows/build-image-docker.yml
    with:
      push-image: false
      additional-build-args: |
        MY_BUILD_ARG_ONE='test'
        MY_BUILD_ARG_TWO='test2'
      image-name: my-cool-project
      version: "1.2.3"
      summarize-build: true
      tag-suffix: "-all-options"
      context: "${{ matrix.context }}"
      target: real

  build-kaniko-minimal:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    uses: ./.github/workflows/build-image-kaniko.yml
    with:
      push-image: false

  build-kaniko-all-options:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    strategy:
      matrix:
        context: [ "test-build", "./test-build"]
    uses: ./.github/workflows/build-image-kaniko.yml
    with:
      push-image: false
      additional-build-args: |
        MY_BUILD_ARG_ONE='test'
        MY_BUILD_ARG_TWO='test2'
      image-name: my-cool-project
      version: "1.2.3"
      tag-suffix: "-all-options"
      context: "${{ matrix.context }}"
      target: real

  build-kaniko-minimal-cached:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    uses: ./.github/workflows/build-image-kaniko.yml
    with:
      enable-cache: true
      image-name: pull-request-${{ github.event.pull_request.number }}/cached
      push-image: true

  build-kaniko-amd64:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    uses: ./.github/workflows/build-image-kaniko.yml
    with:
      digest-artifact-name: digests
      image-name: pull-request-${{ github.event.pull_request.number }}/merged
      push-image: true
      tag-suffix: "-amd64"

  build-docker-arm64:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    uses: ./.github/workflows/build-image-docker.yml
    with:
      digest-artifact-name: digests
      image-name: pull-request-${{ github.event.pull_request.number }}/merged
      platform: linux/arm64
      push-image: true
      tag-suffix: "-amd64"

  merge-with-artifact:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    needs: [ build-kaniko-amd64, build-docker-arm64 ]
    uses: ./.github/workflows/merge-manifests.yml
    with:
      image-name: pull-request-${{ github.event.pull_request.number }}/merged
      tag: ${{ github.sha }}-merged-with-digests
      variant-digests: digests

  merge-with-outputs:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    needs: [ build-kaniko-amd64, build-docker-arm64 ]
    uses: ./.github/workflows/merge-manifests.yml
    with:
      image-name: pull-request-${{ github.event.pull_request.number }}/merged
      tag: ${{ github.sha }}-merged-with-outputs
      variant-digests: |
        ${{ needs.build-kaniko-amd64.outputs.digest }}
        ${{ needs.build-docker-arm64.outputs.digest }}

  clean-package-versions:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    uses: ./.github/workflows/clean.yml
    strategy:
      fail-fast: false
      matrix:
        variant: [ merged, cached, cached/layer-cache ]
    with:
      image-name: pull-request-${{ github.event.pull_request.number }}/${{ matrix.variant }}
      min-versions-to-keep: 1

  clean:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-24.04
    needs:
      - clean-package-versions
    strategy:
      fail-fast: false
      matrix:
        variant: [ merged, cached, cached/layer-cache ]
    steps:
      - id: encode-name
        run: |
          PACKAGE_NAME="pull-request-${{ github.event.pull_request.number }}/${{ matrix.variant }}"
          # Poor man's urlencode
          ENCODED="${PACKAGE_NAME//\//%2F}"
          echo "package-name=${ENCODED}" >> "$GITHUB_OUTPUT"
      - run: >
          gh api
          --method DELETE 
          -H "Accept: application/vnd.github+json" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          /orgs/${{ github.repository_owner}}/packages/container/${{ steps.encode-name.outputs.package-name }}
        env:
          GH_TOKEN: ${{ secrets.GH_PACKAGE_CLEANUP_TOKEN }}
